package suffixes;

import java.util.List;

/**
 * Represents an abstraction of a collection of file suffixes.
 * Suffixes examples: mp3, mpa, bat, exe, ...
 * The collection should be iterable:
 * {@code
 *     for(String suffix: suffixCollection) {
 *         // do something
 *     }
 * }
 *
 * Every collection should have a unique name. The name may be passed into the collection's constructor or
 * even automatically generated by the connection itself.
 *
 * <b>Every suffix is trimmed before it is added into the collection</b>
 */
public interface ISuffixesCollection extends Iterable<String> {

    /**
     * All suffixes are automatically trimmed before they are added into the collection.
     */
    void addSuffix(String suffix);

    /**
     * All suffixes are automatically trimmed before they are added into the collection.
     */
    void addSuffixes(List<String> newSuffixes);

    /**
     * Additional suffixes to the collection. delimitedSuffixes String is split using delimiter parameter.
     * All suffixes are automatically trimmed before they are added into the collection.
     * @param delimitedSuffixes "mp3, mpa, bat"
     * @param delimiter "," or ", "
     */
    void addSuffixes(String delimitedSuffixes, String delimiter);

    /**
     * Same ad addSuffixes(String, String = ",")
     */
    void addSuffixes(String delimitedSuffixes);

    String getName();
    boolean hasName(String anotherName);

    /**
     * Join all suffixes and return them as one delimited String.
     */
    String getSuffixesAsDelimitedString(String delimiter);

    /**
     * Returns an String array of suffixes.
     */
    String[] getSuffixesAsStrArray();

    /**
     * Returns String formatted such as the following example: "glob:**.{exe,bat,sh}"
     */
    String getFileGlobRegexFromSuffixes();

}
