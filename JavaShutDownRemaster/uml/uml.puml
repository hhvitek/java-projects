@startuml


package model {

    interface IAction {
        + getName(): String
        + getDescription(): String
        + acceptParameter(): boolean
        + parametersCount(): int
        + isProducingResult(): boolean
        + executeAction(): String
        + executeAction(String parameter): String
        + executeAction(String[] parameters): String
        + executeActionAsync(): Future<String>
        + executeActionAsync(String parameter): Future<String>
        + executeActionAsync(String[] parameters): Future<String>
    }

    class Action implements IAction {
    }

    class ScheduledAction {
        - action: IAction
        - goalTime: String
        - status: String
        - result: String
        - parameters: String[]

        + getUniqueId(): int
        + getResult(): String
        + isFinished()
        + getRemainingTime(): Duration
        + getGoalTime(): DateTime
        + getStatus(): String
        + getParameters(): String[]
    }

    class Model {
        - timer: Timer

        + getAction(String actionName): IAction
        + getScheduledAction(int uniqueId): ScheduledAction
        + getAllActions(): List<IAction>
        + getAllScheduledActions(): List<ScheduledAction>
        + scheduleAction(actionName: String, delay: Duration): ScheduledAction
    }

    class Presenter {
        + getAllActions(): List<IAction>
        + getAllScheduledActions(): List<ScheduledAction>
        + scheduleAction(actionName: String, delay: Duration): ScheduledAction
    }
}


@enduml
